#!/usr/bin/env ruby
require "rubygems"
require "bundler/setup"
require 'mailman'
#Mailman.config.logger = Logger.new("log/mailman.log")  # uncomment this if you can want to create a log file
Mailman.config.poll_interval = 3  # change this number as per your needs. Default is 60 seconds
Mailman.config.pop3 = {
  server: 'pop.gmail.com', port: 995, ssl: true,
  username: "owaiswiz",
  password: "owaiskhanname"
}
  Mailman::Application.run do
  default do
    begin
    p "Found a new message"
    p message.from.first # message.from is an array
    p message.to.first # message.to is an array again..
    p message.subject
    if message.multipart?
  email_html = message.html_part.body.decoded  #parsing of html content of the email
  email_text = message.text_part.body.decoded  # parsing of text content of the email
  email_attachments = []   # an array which can be used to store object records of the attachments..
  message.attachments.each do |attachment|
    file = StringIO.new(attachment.decoded)
    file.class.class_eval { attr_accessor :original_filename, :content_type }
    file.original_filename = attachment.filename
    file.content_type = attachment.mime_type
    attachment = Attachment.new    # an attachment model and all the attachments are saved here...
    attachment.attached_file = file
    attachment.save
    email_attachments << attachment   # adding all attachment objects one by one in the array...
  end
else
  email_html = message.body.decoded    # in this case its a plain email so html body is same as text body..
  email_text = message.body.decoded
  email_attachments = []   # no attachments :)
end
    rescue Exception => e
      Mailman.logger.error "Exception occurred while receiving message:n#{message}"
      Mailman.logger.error [e, *e.backtrace].join("n")
    end
  end

end
